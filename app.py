# -*- coding: utf-8 -*-
"""app

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/13afaTTgbfXt-hYNNoZNP98B6Yx9fqqqu
"""

import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import geopandas as gpd
import leafmap.foliumap as leafmap

# Title and Description
st.title("Xingu National Park Land Cover Analysis")
st.write("""
This Streamlit app visualizes land cover classification and deforestation trends in Xingu National Park over the years.
The data includes:
- Classified maps for land cover.
- NDVI-based deforestation masks.
- Trends in class area and percentage.
""")

# Sidebar
st.sidebar.title("Navigation")
options = st.sidebar.radio("Choose a section:", ["Overview", "Deforestation Maps", "Class Evolution", "Deforestation Trends"])

# Load CSV data
class_evolution = pd.read_csv("class_evolution_with_percentage.csv")
deforestation_trends = pd.read_csv("deforestation_trends.csv")

if options == "Overview":
    st.subheader("Overview")
    st.write("""
    - **NDVI-based Deforestation** highlights vegetation loss across the years.
    - **Land Cover Classification** maps show transitions between classes.
    - Explore trends and visualize the data interactively!
    """)

if options == "Deforestation Maps":
    st.subheader("NDVI-Based Deforestation Maps")
    st.write("View deforestation areas between consecutive years.")

    year = st.selectbox("Select Year Range:", deforestation_trends["Period"].unique())
    geojson_path = f"Deforestation_{year}.geojson"  # Replace with actual paths to GeoTIFFs or GeoJSONs
    map_deforestation = leafmap.Map(center=[-11.8, -53.5], zoom=7)  # Adjust center/zoom as needed
    map_deforestation.add_geojson(geojson_path, layer_name=f"Deforestation {year}")
    map_deforestation.to_streamlit()

if options == "Class Evolution":
    st.subheader("Class Evolution Over Time")
    st.write("Explore how each land cover class evolves over time.")

    # Plot class areas
    fig, ax = plt.subplots(figsize=(10, 6))
    for cls in class_evolution["Class"].unique():
        data = class_evolution[class_evolution["Class"] == cls]
        ax.plot(data["Year"], data["Area (km²)"], marker='o', label=cls)
    ax.set_title("Land Cover Class Areas Over Time")
    ax.set_xlabel("Year")
    ax.set_ylabel("Area (km²)")
    ax.legend(title="Classes")
    st.pyplot(fig)

    # Show percentage chart
    st.write("### Percentage Change Over Time")
    fig, ax = plt.subplots(figsize=(10, 6))
    for cls in class_evolution["Class"].unique():
        data = class_evolution[class_evolution["Class"] == cls]
        ax.plot(data["Year"], data["Percentage (%)"], marker='o', label=cls)
    ax.set_title("Land Cover Class Percentages Over Time")
    ax.set_xlabel("Year")
    ax.set_ylabel("Percentage (%)")
    ax.legend(title="Classes")
    st.pyplot(fig)

if options == "Deforestation Trends":
    st.subheader("Deforestation Trends")
    st.write("Analyze the yearly deforestation trends.")

    # Plot deforestation trends
    fig, ax = plt.subplots(figsize=(10, 6))
    ax.bar(deforestation_trends["Period"], deforestation_trends["Deforested Area (km²)"], color="red")
    ax.set_title("Deforested Area Per Period")
    ax.set_xlabel("Period")
    ax.set_ylabel("Deforested Area (km²)")
    ax.set_xticklabels(deforestation_trends["Period"], rotation=45)
    st.pyplot(fig)

    # Show table
    st.write("### Deforestation Data Table")
    st.dataframe(deforestation_trends)